/* @link https://utopia.fyi/type/calculator?c=320,14,1.1667,900,18,1.2,4,1,&s=0.75|0.5|0.25,1.5|2|3|4|6,s-l */

$typography: (
    'header-1': (
        'font-weight': 600,
        'line-height': 1.3,
        'font-size': var(--step-4),
    ),
    'header-2': (
        'font-weight': 600,
        'line-height': 1.3,
        'font-size': var(--step-3),
    ),
    'header-3': (
        'font-weight': 600,
        'line-height': 1.3,
        'font-size': var(--step-2)
    ),
    'header-4': (
        'font-weight': 600,
        'line-height': 1.3,
        'font-size': var(--step-1)
    ),
    'p-1': (
        'line-height': 1.5,
        'font-size': var(--step-0)
    ),
    'p-2': (
        'line-height': 1.5,
        'font-size': var(--step--1)
    ),
);

// --fluid-bp is defined in spacing config
:root {
    --f--1-min: 12.00;
    --f--1-max: 15.00;
    --step--1: calc(
        ((var(--f--1-min) / var(--ppr, 16)) * 1rem) + (var(--f--1-max) - var(--f--1-min)) *
        var(--fluid-bp)
    );

    --f-0-min: 14.00;
    --f-0-max: 18.00;
    --step-0: calc(
        ((var(--f-0-min) / var(--ppr, 16)) * 1rem) + (var(--f-0-max) - var(--f-0-min)) *
        var(--fluid-bp)
    );

    --f-1-min: 16.33;
    --f-1-max: 21.60;
    --step-1: calc(
        ((var(--f-1-min) / var(--ppr, 16)) * 1rem) + (var(--f-1-max) - var(--f-1-min)) *
        var(--fluid-bp)
    );

    --f-2-min: 19.06;
    --f-2-max: 25.92;
    --step-2: calc(
        ((var(--f-2-min) / var(--ppr, 16)) * 1rem) + (var(--f-2-max) - var(--f-2-min)) *
        var(--fluid-bp)
    );

    --f-3-min: 22.23;
    --f-3-max: 31.10;
    --step-3: calc(
        ((var(--f-3-min) / var(--ppr, 16)) * 1rem) + (var(--f-3-max) - var(--f-3-min)) *
        var(--fluid-bp)
    );

    --f-4-min: 25.94;
    --f-4-max: 37.32;
    --step-4: calc(
        ((var(--f-4-min) / var(--ppr, 16)) * 1rem) + (var(--f-4-max) - var(--f-4-min)) *
        var(--fluid-bp)
    );
}


@mixin font-size($key, $isStatic: false) {
    $props: map-get($typography, $key);

    @if $isStatic {
        // TODO: add ability to pass static value
    }

    font-family: map-get($props, font-family);
    font-weight: map-get($props, font-weight);
    font-size: var(--font-size, #{map-get($props, font-size)});
    line-height: var(--line-height, #{map-get($props, line-height)});
    // safari clamp bug
    // https://stackoverflow.com/questions/37070694/font-size-calc-dynamic-size-safari-failing
    // still works not all the time and need investigation
    min-height: 0vw;
}

@mixin apply-typography-header1($isStatic: false) {
    @include font-size('header-1', $isStatic);
}
@mixin apply-typography-header2($isStatic: false) {
    @include font-size('header-2', $isStatic);
}
@mixin apply-typography-header3($isStatic: false) {
    @include font-size('header-3', $isStatic);
}
@mixin apply-typography-header4($isStatic: false) {
    @include font-size('header-4', $isStatic);
}
@mixin apply-typography-p1($isStatic: false) {
    @include font-size('p-1', $isStatic);
}
@mixin apply-typography-p2($isStatic: false) {
    @include font-size('p-2', $isStatic);
}

.header-1 {
    @include apply-typography-header1();
}

.header-2 {
    @include apply-typography-header2();
}

.header-3 {
    @include apply-typography-header3();
}

.header-4 {
    @include apply-typography-header4();
}

.p-1 {
    @include apply-typography-p1();
}

.p-2 {
    @include apply-typography-p2();
}

strong,
b {
    font-weight: 500;
}
